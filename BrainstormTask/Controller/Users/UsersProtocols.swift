//
//  UsersProtocols.swift
//  BrainstormTask
//
//  Created Sargis Khachatryan on 10.03.21.
//  Copyright © 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation
import SwiftyJSON
import RealmSwift

//MARK: Wireframe -
protocol UsersWireframeProtocol: class {
    func pushToUserDtail(_ user: User)
}
//MARK: Presenter -
protocol UsersPresenterProtocol: class {

    var interactor: UsersInteractorInputProtocol? { get set }
    var users: [User] { get set }
    var savedUsers: Results<User> { get set }
    var currentPageNumber: Int { get set }
    var userDataType: UserDataType { get set}
    
    func pullToRefreshSwipe()
    func loadMoreSwipe()
    func didSelect(_ index: Int)
    func didSelectSearchResult(_ user: User)
}

//MARK: Interactor -
protocol UsersInteractorOutputProtocol: class {

    /* Interactor -> Presenter */
    func rceivedUserData(_ json: JSON?, error: Error?)
}

protocol UsersInteractorInputProtocol: class {

    var presenter: UsersInteractorOutputProtocol?  { get set }

    /* Presenter -> Interactor */
    func getUserData(_ pageNumber: Int)
}

//MARK: View -
protocol UsersViewProtocol: class {

    var presenter: UsersPresenterProtocol?  { get set }

    /* Presenter -> ViewController */
    func receivedError(_ error: Error)
    func updateUserList()
}
